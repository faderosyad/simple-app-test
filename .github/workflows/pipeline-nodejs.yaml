name: nodejs

on:
  push:
    branches:
      - 'main'
    paths:
      - 'service/discord-integrator/**'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: gke-fade-rosyad    # Add your cluster name here.
  GKE_ZONE: us-central1-b   # Add your cluster zone here.
  DEPLOYMENT_NAME: discord-integrator # Add your deployment name here.
  IMAGE: discord-integrator

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # # Setup gcloud CLI
    # - name: Setup GCloud
    #   uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
    #   with:
    #     service_account_key: ${{ secrets.GKE_SA_KEY }}
    #     project_id: ${{ secrets.GKE_PROJECT }}

    # # Configure Docker to use the gcloud command-line tool as a credential
    # # helper for authentication
    # - run: |-
    #     gcloud --quiet auth configure-docker

    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v3
    
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3

    # # Get the GKE credentials so we can deploy to the cluster
    # - name: 
    #   uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
    #   with:
    #     cluster_name: ${{ env.GKE_CLUSTER }}
    #     location: ${{ env.GKE_ZONE }}
    #     credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./service/discord-integrator
        platforms: linux/amd64
        push: true
        tags: faderosyad/discord-integrator:latest

    # Deploy the Docker image to the GKE cluster
    # - name: Deploy
    #   run: |-
    #     sed -i s#IMAGE#faderosyad/$IMAGE:latest deployment.yaml
    #     kubectl apply -f -
    #     kubectl rollout status deployment/$DEPLOYMENT_NAME
    #     kubectl get services -o wide